services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "${API_PORT:-4000}:4000"
    container_name: capstone-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=${API_PORT:-4000}
      - HOST=0.0.0.0
      - NODE_ENV=${NODE_ENV:-production}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - PRODUCTION_CORS_ORIGIN=${PRODUCTION_CORS_ORIGIN:-http://localhost:3000}
      - DB_TYPE=${DB_TYPE:-mysql}
      - DB_ORM=${DB_ORM:-typeorm}
      - DATABASE_URL=${DATABASE_URL:-mysql://root:password@host.docker.internal:3306/cms}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:4000}
    ports:
      - "${WEB_PORT:-3000}:80"
    container_name: capstone-web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
